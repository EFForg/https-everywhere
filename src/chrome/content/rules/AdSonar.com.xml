
<!--
Disabled by https-everywhere-checker because:
Fetch error: http://sl-retargeting.adsonar.com/process/roi/leadback.jsp?lb= => https://sl-retargeting.adsonar.com/process/roi/leadback.jsp?lb=: (7, 'Failed to connect to sl-retargeting.adsonar.com port 443: Connection refused')
Fetch error: http://secure-js.adsonar.com/ => https://secure-js.adsonar.com/: (6, 'Could not resolve host: secure-js.adsonar.com')
Fetch error: http://sl-retargeting.adsonar.com/ => https://sl-retargeting.adsonar.com/: (7, 'Failed to connect to sl-retargeting.adsonar.com port 443: Connection refused')
Fetch error: http://ssl-sl-retargeting.adsonar.com/ => https://ssl-sl-retargeting.adsonar.com/: (7, 'Failed to connect to ssl-sl-retargeting.adsonar.com port 443: Connection refused')
Fetch error: http://www.adsonar.com/ => https://www.adsonar.com/: (6, 'Could not resolve host: www.adsonar.com')
Fetch error: http://adsonar.com/ => https://www.adsonar.com/: (6, 'Could not resolve host: www.adsonar.com')
Fetch error: http://js.adsonar.com/ => https://secure-js.adsonar.com/: (6, 'Could not resolve host: secure-js.adsonar.com')

	For other AOL coverage, see AOL.xml.


	Problematic hosts in *adsonar.com:

		- ^ ¹
		- js ²

	¹ Mismatched
	² Akamai


	Insecure cookies are set for these domains:

		- .adsonar.com

-->
<ruleset name="AdSonar.com" default_off="failed ruleset test">

	<!--	Direct rewrites:
				-->
	<target host="secure-js.adsonar.com" />
	<target host="sl-retargeting.adsonar.com" />
	<target host="ssl-sl-retargeting.adsonar.com" />
	<target host="www.adsonar.com" />

	<!--	Complications:
				-->
	<target host="adsonar.com" />
	<target host="js.adsonar.com" />

		<test url="http://sl-retargeting.adsonar.com/process/roi/leadback.jsp?lb=" />


	<!--	Not secured by server:
					-->
	<!--securecookie host="^\.adsonar\.com$" name="^ASLLB$" /-->

	<securecookie host="^\.adsonar\.com$" name=".+" />


	<rule from="^http://adsonar\.com/"
		to="https://www.adsonar.com/" />

	<rule from="^http://js\.adsonar\.com/"
		to="https://secure-js.adsonar.com/" />

	<rule from="^http:"
		to="https:" />


</ruleset>
